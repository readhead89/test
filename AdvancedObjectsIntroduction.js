/*
Введение в расширенные объекты
Помните, что объекты в JavaScript — это контейнеры, в которых хранятся данные и функции. В этом уроке мы будем опираться на основы создания объектов и рассмотрим некоторые дополнительные концепции.
Так что если нет возражений, давайте подробнее разбираться с объектами!
В этом уроке мы рассмотрим следующие темы:
как использовать this ключевое слово.
передача конфиденциальности в методах JavaScript.
определение геттеров и сеттеров в объектах.
создание фабричных функций.
с использованием методов деструкции.
 */

/*
 this
Объекты представляют собой наборы связанных данных и функций. Мы храним эту функциональность в методах наших объектов:
const goat = {
  dietType: 'herbivore',
  makeSound() {
    console.log('baaa');
  }
};
В нашем goatобъекте у нас есть .makeSound()метод. Мы можем вызвать .makeSound()метод на goat.
goat.makeSound(); // Prints baaa
Отлично, у нас есть goat объект, который можно вывести baaa на консоль. Кажется, все работает нормально. goatЧто, если бы мы захотели добавить к нашему объекту новый метод с именем .diet(), который печатает goat's dietType?

const goat = {
  dietType: 'herbivore',
  makeSound() {
    console.log('baaa');
  },
  diet() {
    console.log(dietType);
  }
};
goat.diet();
// Output will be "ReferenceError: dietType is not defined"
Странно, почему dietType не определено, хотя это свойство goat? Это потому .diet(), что внутри области действия метода у нас нет автоматического доступа к другим свойствам объекта goat.
Вот где this ключевое слово приходит на помощь. Если мы изменим .diet()метод, чтобы использовать this, .diet()работает! :
const goat = {
  dietType: 'herbivore',
  makeSound() {
    console.log('baaa');
  },
  diet() {
    console.log(this.dietType);
  }
};
goat.diet();
// Output: herbivore
Ключевое this слово ссылается на вызывающий объект , который обеспечивает доступ к свойствам вызывающего объекта. В приведенном выше примере вызывающий объект — это goat и с помощью this мы получаем доступ к goat самому объекту, а затем к dietType свойству goat с помощью точечной нотации свойства.
Давайте освоимся с использованием this ключевого слова в методе.
 */
const robot = {
    model:'1E78V2',
    energyLevel: 100,
    provideInfo(){
        return `I am ${this.model} and my current energy level is ${this.energyLevel}`
    }
};
console.log(robot.provideInfo())