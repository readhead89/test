/*
Операторы сравнения
При написании условных операторов иногда нам нужно использовать разные типы операторов для сравнения значений. Эти операторы называются операторами сравнения .
Вот список некоторых удобных операторов сравнения и их синтаксис:
Меньше, чем:<
Больше чем:>
Меньше или равно:<=
Больше или равно:>=
Равно:===
Не равно:!==
Операторы сравнения сравнивают значение слева со значением справа. Например:
10 < 12 // Evaluates to true
Может быть полезно думать об утверждениях сравнения как о вопросах. При ответе «да» выражение оценивается как true, а при ответе «нет» выражение оценивается как false. Приведенный выше код будет спрашивать: 10 меньше 12? Да! Так 10 < 12что оценивает true.
Мы также можем использовать операторы сравнения для разных типов данных, таких как строки:
'apples' === 'oranges' // false
В приведенном выше примере мы используем оператор идентификации ( ), чтобы проверить, совпадает ===ли строка со строкой . Поскольку две строки не совпадают, оператор сравнения оценивается как .'apples''oranges' false
Все операторы сравнения оцениваются как либо true или false и состоят из:
Два значения, которые будут сравниваться.
Оператор, который разделяет значения и соответственно сравнивает их ( >, <, <=, >=, ===, !==).
Давайте попрактикуемся в использовании этих операторов сравнения!
Используя let, создайте переменную с именем hungerLevel и установите ее равной 7.
Напишите if...else оператор, используя оператор сравнения. Условие должно проверять, hungerLevel больше ли 7. Если это так, условный оператор должен протоколировать 'Time to eat!'. В противном случае он должен войти в лог 'We can eat later!'.
После нажатия кнопки «Выполнить» поэкспериментируйте с условием, настроив сравнение hungerLevel с помощью различных операторов, таких как , <=, и .>=><
 */
let hungerLevel = 7
if(hungerLevel === 7){
    console.log('Time to eat!')
}
else{
    console.log ('We can eat later!')
}
