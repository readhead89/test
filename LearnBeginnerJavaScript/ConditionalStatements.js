/*
Что такое условные операторы?
В жизни мы принимаем решения, исходя из обстоятельств. Думайте о повседневном решении так же обыденно, как заснуть — если мы устали, мы ложимся спать, иначе мы просыпаемся и начинаем свой день.
Эти решения «если-иначе» можно смоделировать в коде, создав условные операторы. Условный оператор проверяет определенное условие (условия) и выполняет задачу на основе условия (условий).
В этом уроке мы рассмотрим, как программы принимают решения, оценивая условия, и внедрим логику в наш код!
Мы рассмотрим следующие концепции:
if, else if, и else заявления
операторы сравнения
логические операторы
истинные и ложные значения
тернарные операторы
switch заявление
Итак, если вы готовы изучить эти понятия, переходите к следующему уроку , в противном случае прочитайте понятия, изучите схему и подготовьтесь к этому уроку!
 */

/*
Мы часто выполняем задачу на основе условия. Например, если сегодня хорошая погода, то мы выйдем на улицу. Если прозвенит будильник, мы его выключим. Если мы устали, то пойдем спать.
В программировании мы также можем выполнить задачу на основе условия с помощью if оператора:
if (true) {
  console.log('This message will print!');
}
// Prints: This message will print!
Обратите внимание, что в приведенном выше примере у нас есть if оператор. Заявление if состоит из:

Ключевое if слово, за которым следует набор круглых скобок , ()за которым следует блок кода или оператор блока , обозначенный набором фигурных скобок {}.
Внутри круглых скобок ()указано условие, оцениваемое как true или false.
Если условие оценивается как true, запускается код внутри фигурных скобок {}или выполняется .
Если условие оценивается как false, блок не будет выполняться.
Сделаем if заявление.
Используя let ключевое слово, объявите переменную с именем sale. trueПрисвойте ему значение .
Теперь создайте if заявление. Предоставьте if оператору условие sale.
Внутри блока кода if инструкции console.log()строка 'Time to buy!'.
Обратите внимание, что код внутри if оператора запустился, так как 'Time to buy!'был зарегистрирован на консоли.
Ниже sale объявления переменной, но перед оператором if переназначьте . Запустите свой код и посмотрите, что произойдет, мы изменим это поведение в следующем упражнении.sale false
 */
let sale = true
sale = false
if(sale){
    console.log ('Time to buy!')
}

/*
Операторы If...Else
В предыдущем упражнении мы использовали if инструкцию, которая проверяла условие, чтобы решить, запускать блок кода или нет. Во многих случаях у нас будет код, который мы хотим запустить, если наше условие оценивается как false.
В программировании мы также можем выполнять задачу на основе условия, используя if оператор: else оператор для запуска блока кода, когда условие оценивается как false. Взгляните на включение заявления else:
if (false) {
  console.log('The code in this block will not run.');
} else {
  console.log('But the code in this block will!');
}
// Prints: But the code in this block will!
Обратите внимание, что в приведенном выше примере у нас есть else оператор. Заявление if состоит из: if...else заявления.
В приведенном выше примере else утверждение:
Использует else ключевое слово после блока кода оператора if.
Имеет блок кода, заключенный в фигурные скобки {}.
Код внутри else блока кода оператора будет выполняться, когда if условие оператора оценивается как false.
if...else утверждения позволяют нам автоматизировать ответы на вопросы «да» или «нет», также известные как бинарные решения .
Добавьте else оператор к существующему if оператору. Внутри блока кода else оператора console.log()строка'Time to wait for a sale.'
 */
let sale1;
sale1 = false;
if(sale1) {
    console.log('Time to buy!');
}
else {
    console.log ('Time to wait for a sale.')
}